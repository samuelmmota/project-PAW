{"ast":null,"code":"var _jsxFileName = \"/Users/samuelmota/Documents/project-PAW/frontend/src/pages/Login/index.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport Footer from \"../../components/Footer\";\nimport Header from \"../../components/Header\";\nimport { Navigate } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { auth_loginUrl, userUrl } from \"../../resources/constants.js\";\nimport { ContainerFormLogin, FormLogin, InputProfile, ContainerAllButtons, ContainerButton, ButtonLogin, ButtonRegister } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const [login, setLogin] = useState(false);\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"handle submit\");\n    if (type === \"login\") {\n      loginUser({\n        email: emailRef.current.value,\n        password: passwordRef.current.value\n      });\n    } else if (type === \"register\") {\n      registerButton({\n        email: emailRef.current.value,\n        password: passwordRef.current.value\n      });\n    }\n    /* loginUser({\n       email: emailRef.current.value,\n       password: passwordRef.current.value,\n     });*/\n  }\n\n  async function loginUser(credentials) {\n    console.log(\"login user\");\n    console.log(credentials);\n    const url = auth_loginUrl;\n    try {\n      const response = await Axios.post(url, JSON.stringify(credentials), {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(\"user is valid!\");\n      console.log(response.data.token);\n      setLogin(true);\n      sessionStorage.setItem(\"token\", response.data.token);\n    } catch (error) {\n      sessionStorage.removeItem(\"token\");\n      setLogin(false);\n      console.log(error);\n      toast.error(error.response.data.message, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n      console.log(\"user is invalid!\");\n    }\n  }\n  async function registerButton(credentials) {\n    try {\n      const response = await Axios.post(userUrl, JSON.stringify(credentials), {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      toast.success(\"User Registered Successfully\", {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    } catch (error) {\n      sessionStorage.removeItem(\"token\");\n      console.log(error);\n      toast.error(error.response.data.message, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), login ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(ContainerFormLogin, {\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(FormLogin, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(InputProfile, {\n          placeholder: \"Email\",\n          name: \"email\",\n          type: \"text\",\n          ref: emailRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InputProfile, {\n          placeholder: \"Password\",\n          name: \"passwUser\",\n          type: \"password\",\n          ref: passwordRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ContainerAllButtons, {\n          children: [/*#__PURE__*/_jsxDEV(ContainerButton, {\n            children: /*#__PURE__*/_jsxDEV(ButtonLogin, {\n              type: \"submit\",\n              onClick: event => handleSubmit(event, \"login\"),\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ContainerButton, {\n            children: /*#__PURE__*/_jsxDEV(ButtonRegister, {\n              type: \"submit\",\n              onClick: event => handleSubmit(event, \"register\"),\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Login, \"ABgUaYxjG7/7X/Q77qG8g4eQZy4=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useRef","useState","Footer","Header","Navigate","Axios","ToastContainer","toast","auth_loginUrl","userUrl","ContainerFormLogin","FormLogin","InputProfile","ContainerAllButtons","ContainerButton","ButtonLogin","ButtonRegister","Login","emailRef","passwordRef","login","setLogin","handleSubmit","event","preventDefault","console","log","type","loginUser","email","current","value","password","registerButton","credentials","url","response","post","JSON","stringify","headers","data","token","sessionStorage","setItem","error","removeItem","message","position","POSITION","TOP_RIGHT","success"],"sources":["/Users/samuelmota/Documents/project-PAW/frontend/src/pages/Login/index.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport Footer from \"../../components/Footer\";\nimport Header from \"../../components/Header\";\nimport { Navigate } from \"react-router-dom\";\n\nimport Axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { auth_loginUrl, userUrl } from \"../../resources/constants.js\";\n\nimport {\n  ContainerFormLogin,\n  FormLogin,\n  InputProfile,\n  ContainerAllButtons,\n  ContainerButton,\n  ButtonLogin,\n  ButtonRegister,\n} from \"./styles\";\nconst Login = () => {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  const [login, setLogin] = useState(false);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"handle submit\");\n    if (type === \"login\") {\n      loginUser({\n        email: emailRef.current.value,\n        password: passwordRef.current.value,\n      });\n    } else if (type === \"register\") {\n      registerButton({\n        email: emailRef.current.value,\n        password: passwordRef.current.value,\n      });\n    }\n   /* loginUser({\n      email: emailRef.current.value,\n      password: passwordRef.current.value,\n    });*/\n  }\n  async function loginUser(credentials) {\n    console.log(\"login user\");\n    console.log(credentials);\n    const url = auth_loginUrl;\n    try {\n      const response = await Axios.post(url, JSON.stringify(credentials), {\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n      console.log(\"user is valid!\");\n      console.log(response.data.token);\n\n      setLogin(true);\n\n      sessionStorage.setItem(\"token\", response.data.token);\n    } catch (error) {\n      sessionStorage.removeItem(\"token\");\n      setLogin(false);\n\n      console.log(error);\n      toast.error(error.response.data.message, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      console.log(\"user is invalid!\");\n    }\n  }\n\n  async function registerButton(credentials) {\n    try {\n      const response = await Axios.post(userUrl, JSON.stringify(credentials), {\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n      toast.success(\"User Registered Successfully\", {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    } catch (error) {\n      sessionStorage.removeItem(\"token\");\n      console.log(error);\n      toast.error(error.response.data.message, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    }\n\n  }\n\n  return (\n    <>\n      <Header />\n      {login ? (\n        <>\n          <Navigate to=\"/\" replace={true} />\n        </>\n      ) : (\n        <ContainerFormLogin>\n         <ToastContainer />\n          <FormLogin onSubmit={handleSubmit}>\n            <InputProfile\n              placeholder=\"Email\"\n              name=\"email\"\n              type=\"text\"\n              ref={emailRef}\n              required\n            ></InputProfile>\n            <InputProfile\n              placeholder=\"Password\"\n              name=\"passwUser\"\n              type=\"password\"\n              ref={passwordRef}\n              required\n            ></InputProfile>\n            <ContainerAllButtons>\n              <ContainerButton>\n              <ButtonLogin\n                  type=\"submit\"\n                  onClick={(event) => handleSubmit(event, \"login\")}>\n                  Login\n                </ButtonLogin>\n              </ContainerButton>\n              <ContainerButton>\n              <ButtonRegister\n                  type=\"submit\"\n                  onClick={(event) => handleSubmit(event, \"register\")}>\n                  Register\n                </ButtonRegister>\n              </ContainerButton>\n            </ContainerAllButtons>\n          </FormLogin>\n        </ContainerFormLogin>\n      )}\n      <Footer />\n    </>\n  );\n};\n\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module"}