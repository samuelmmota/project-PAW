{"ast":null,"code":"var _jsxFileName = \"/Users/samuelmota/Documents/project-PAW/frontend/src/pages/Profile/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Footer from \"../../components/Footer\";\nimport Header from \"../../components/Header\";\nimport User from \"../../components/User\";\nimport Axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { userUrl, clinicalUrl } from \"../../resources/constants.js\";\nimport { Form, ClinicalList, ClinicalItem, RemoveButton, PageContainer } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const navigate = useNavigate();\n  const token = sessionStorage.getItem(\"token\");\n  const isLoggedIn = token !== null;\n  const decodedToken = JSON.parse(atob(token.split(\".\")[1]));\n  const userID = decodedToken.user_id;\n  const [user, setUser] = useState({\n    user_name: \"\",\n    user_email: \"\",\n    clinicals: []\n  });\n  const [clinical, setClinical] = useState(\"\");\n  useEffect(() => {\n    getMyUser();\n    getClinicals();\n  }, []);\n  async function getMyUser() {\n    const url = userUrl + userID;\n    try {\n      const response = await Axios.get(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token\n        }\n      });\n      const userData = response.data.user;\n      setUser({\n        user_name: userData.name,\n        user_email: userData.email\n      });\n    } catch (err) {\n      console.log(err);\n      toast.error(err.response.data.message, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n      if (err.response.data.message === \"token is not valid\") {\n        navigate(\"/login\");\n      }\n    }\n  }\n  async function getClinicals() {\n    const url = clinicalUrl + userID;\n    try {\n      const response = await Axios.get(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token\n        }\n      });\n      setUser(prevState => ({\n        ...prevState,\n        clinicals: response.data.clinicals\n      }));\n    } catch (err) {\n      console.log(err);\n      toast.error(err.response.data.message, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    }\n  }\n  async function addClinical() {\n    const url = userUrl;\n    try {\n      const response = await Axios.post(url, {\n        clinical: clinical\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token\n        }\n      });\n      const updatedClinicals = [...user.clinicals, response.data.clinical];\n      setUser(prevState => ({\n        ...prevState,\n        clinicals: updatedClinicals\n      }));\n      toast.success(\"Clinical added successfully\", {\n        position: toast.POSITION.TOP_RIGHT\n      });\n      setClinical(\"\"); // Clear the input field after adding clinical\n    } catch (err) {\n      console.log(err);\n      toast.error(err.response.data.message, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    }\n  }\n  async function removeClinical(clinicalID) {\n    const url = userUrl + clinicalID;\n    try {\n      await Axios.delete(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token\n        }\n      });\n      const updatedClinicals = user.clinicals.filter(clinical => clinical.id !== clinicalID);\n      setUser(prevState => ({\n        ...prevState,\n        clinicals: updatedClinicals\n      }));\n      toast.success(\"Clinical removed successfully\", {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    } catch (err) {\n      console.log(err);\n      toast.error(err.response.data.message, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PageContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(User, {\n        userName: user.user_name,\n        userEmail: user.user_email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: addClinical,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Add Clinicals to Evaluate:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"clinical\",\n          value: clinical,\n          onChange: e => setClinical(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ClinicalList, {\n        children: user.clinicals && user.clinicals.length !== 0 && user.clinicals.map(clinical => /*#__PURE__*/_jsxDEV(ClinicalItem, {\n          children: [clinical.clinical.email, /*#__PURE__*/_jsxDEV(RemoveButton, {\n            onClick: () => removeClinical(clinical.clinical.id),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 9\n          }, this)]\n        }, clinical.clinical.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n_s(Profile, \"mhQO688TCIfatwLYZYbI6ZKcj4c=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","Footer","Header","User","Axios","ToastContainer","toast","useNavigate","userUrl","clinicalUrl","Form","ClinicalList","ClinicalItem","RemoveButton","PageContainer","Profile","navigate","token","sessionStorage","getItem","isLoggedIn","decodedToken","JSON","parse","atob","split","userID","user_id","user","setUser","user_name","user_email","clinicals","clinical","setClinical","getMyUser","getClinicals","url","response","get","headers","Authorization","userData","data","name","email","err","console","log","error","message","position","POSITION","TOP_RIGHT","prevState","addClinical","post","updatedClinicals","success","removeClinical","clinicalID","delete","filter","id","e","target","value","length","map"],"sources":["/Users/samuelmota/Documents/project-PAW/frontend/src/pages/Profile/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Footer from \"../../components/Footer\";\nimport Header from \"../../components/Header\";\nimport User from \"../../components/User\";\nimport Axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { userUrl, clinicalUrl } from \"../../resources/constants.js\";\nimport { Form, ClinicalList, ClinicalItem, RemoveButton, PageContainer } from \"./styles\";\n\nconst Profile = () => {\n  const navigate = useNavigate();\n  const token = sessionStorage.getItem(\"token\");\n  const isLoggedIn = token !== null;\n  const decodedToken = JSON.parse(atob(token.split(\".\")[1]));\n  const userID = decodedToken.user_id;\n\n  const [user, setUser] = useState({\n    user_name: \"\",\n    user_email: \"\",\n    clinicals: [],\n  });\n\n  const [clinical, setClinical] = useState(\"\");\n\n  useEffect(() => {\n    getMyUser();\n    getClinicals();\n  }, []);\n\n  async function getMyUser() {\n    const url = userUrl + userID;\n    try {\n      const response = await Axios.get(url, {\n        headers: { \"Content-Type\": \"application/json\", Authorization: token },\n      });\n      const userData = response.data.user;\n      setUser({\n        user_name: userData.name,\n        user_email: userData.email,\n      });\n    } catch (err) {\n      console.log(err);\n      toast.error(err.response.data.message, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      if (err.response.data.message === \"token is not valid\") {\n        navigate(\"/login\");\n      }\n    }\n  }\n\n  async function getClinicals() {\n    const url = clinicalUrl + userID;\n    try {\n      const response = await Axios.get(url, {\n        headers: { \"Content-Type\": \"application/json\", Authorization: token },\n      });\n      setUser((prevState) => ({\n        ...prevState,\n        clinicals: response.data.clinicals,\n      }));\n    } catch (err) {\n      console.log(err);\n      toast.error(err.response.data.message, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    }\n  }\n\n  async function addClinical() {\n    const url = userUrl;\n    try {\n      const response = await Axios.post(\n        url,\n        { clinical: clinical },\n        {\n          headers: { \"Content-Type\": \"application/json\", Authorization: token },\n        }\n      );\n      const updatedClinicals = [...user.clinicals, response.data.clinical];\n      setUser((prevState) => ({\n        ...prevState,\n        clinicals: updatedClinicals,\n      }));\n      toast.success(\"Clinical added successfully\", {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      setClinical(\"\"); // Clear the input field after adding clinical\n    } catch (err) {\n      console.log(err);\n      toast.error(err.response.data.message, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    }\n  }\n\n  async function removeClinical(clinicalID) {\n    const url = userUrl + clinicalID;\n    try {\n      await Axios.delete(url, {\n        headers: { \"Content-Type\": \"application/json\", Authorization: token },\n      });\n      const updatedClinicals = user.clinicals.filter(\n        (clinical) => clinical.id !== clinicalID\n      );\n      setUser((prevState) => ({\n        ...prevState,\n        clinicals: updatedClinicals,\n      }));\n      toast.success(\"Clinical removed successfully\", {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    } catch (err) {\n      console.log(err);\n      toast.error(err.response.data.message, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    }\n  }\n\n  return (\n    <>\n          <PageContainer>\n      <Header />\n      <ToastContainer />\n      {isLoggedIn && (\n        <User userName={user.user_name} userEmail={user.user_email} />\n      )}\n      <Form onSubmit={addClinical}>\n        <label>Add Clinicals to Evaluate:</label>\n        <input\n          type=\"text\"\n          name=\"clinical\"\n          value={clinical}\n          onChange={(e) => setClinical(e.target.value)}\n        />\n        <button type=\"submit\">Add</button>\n      </Form>\n      <ClinicalList>\n  {user.clinicals && user.clinicals.length !== 0 && (\n    user.clinicals.map((clinical) => (\n      <ClinicalItem key={clinical.clinical.id}>\n        {clinical.clinical.email}\n        <RemoveButton onClick={() => removeClinical(clinical.clinical.id)}>\n          X\n        </RemoveButton>\n      </ClinicalItem>\n    ))\n  )}\n</ClinicalList>\n\n      <Footer />\n</PageContainer>\n    </>\n  );\n};\n\nexport default Profile;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}